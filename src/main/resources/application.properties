spring.application.name=sgp-backend
# CONFIGURACIÃ“N DE PUERTO (Puede ser omitida, pero es buena prÃ¡ctica)
server.port=8080


# JWT Configuration (Usar una clave de 256 bits o más)
# Puedes generar una con: base64 -w 0 < /dev/urandom | head -c 32
jwt.secret-key=kyaUmQ4CuRA3OJamLGhR1hYfCuVGBCf6X8XVohO/lA0=
# 24 horas en milisegundos
jwt.expiration=86400000

# ====================================
# CONFIGURACIÓN DE EMAIL (JavaMail)
# ====================================
# Utiliza tu servidor SMTP real o un servicio de desarrollo (MailHog/MailDev)

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=b180022@unach.mx
spring.mail.password=vnvjefxvduccfwzr
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# CONFIGURACION DE POSTGRESQL (Usando el servicio 'db' en el puerto 5432)
spring.datasource.url=jdbc:postgresql://localhost:5432/sgp_db
spring.datasource.username=sgp_user
spring.datasource.password=sgp_password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect#No es necesario s seleccionado por default

# CONFIGURACION DE REDIS (Usando el servicio 'redis' en el puerto 6379)
spring.data.redis.host=localhost
spring.data.redis.port=6379

# Configuración de RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=user
spring.rabbitmq.password=password

# CONFIGURACIÓN DE COLAS (Para el MailProducer)
queue.mail.name=mailQueue
queue.mail.exchange=mailExchange

#Thymealeft
//logging.level.org.thymeleaf=DEBUG

